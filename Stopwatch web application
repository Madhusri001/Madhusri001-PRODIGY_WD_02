
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Stopwatch</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div class="stopwatch">
    <div class="display">00:00:00</div>
    <div class="controls">
      <button id="startBtn">Start</button>
      <button id="pauseBtn">Pause</button>
      <button id="resetBtn">Reset</button>
      <button id="lapBtn">Lap</button>
    </div>
    <ul class="laps"></ul>
  </div>
  <script src="script.js"></script>
</body>
</html>





body {
  font-family: Arial, sans-serif;
}

.stopwatch {
  text-align: center;
}

.display {
  font-size: 2em;
  margin-bottom: 20px;
}

.controls button {
  margin: 5px;
  padding: 5px 10px;
  font-size: 1em;
}

.laps {
  list-style-type: none;
  padding: 0;
}



let startTime;
let elapsedTime = 0;
let timerInterval;

const display = document.querySelector('.display');
const startBtn = document.getElementById('startBtn');
const pauseBtn = document.getElementById('pauseBtn');
const resetBtn = document.getElementById('resetBtn');
const lapBtn = document.getElementById('lapBtn');
const lapsList = document.querySelector('.laps');

function formatTime(milliseconds) {
  const date = new Date(milliseconds);
  const hours = date.getUTCHours().toString().padStart(2, '0');
  const minutes = date.getUTCMinutes().toString().padStart(2, '0');
  const seconds = date.getSeconds().toString().padStart(2, '0');
  const centiseconds = Math.floor(date.getMilliseconds() / 10).toString().padStart(2, '0');
  return `${hours}:${minutes}:${seconds}:${centiseconds}`;
}

function updateDisplay() {
  display.textContent = formatTime(elapsedTime);
}

function startTimer() {
  startTime = Date.now() - elapsedTime;
  timerInterval = setInterval(function() {
    elapsedTime = Date.now() - startTime;
    updateDisplay();
  }, 10);
}

function pauseTimer() {
  clearInterval(timerInterval);
}

function resetTimer() {
  clearInterval(timerInterval);
  elapsedTime = 0;
  updateDisplay();
  lapsList.innerHTML = '';
}

function lapTimer() {
  const lapTime = formatTime(elapsedTime);
  const lapItem = document.createElement('li');
  lapItem.textContent = lapTime;
  lapsList.appendChild(lapItem);
}

startBtn.addEventListener('click', function() {
  startTimer();
  startBtn.disabled = true;
  pauseBtn.disabled = false;
});

pauseBtn.addEventListener('click', function() {
  pauseTimer();
  startBtn.disabled = false;
  pauseBtn.disabled = true;
});

resetBtn.addEventListener('click', function() {
  resetTimer();
  startBtn.disabled = false;
  pauseBtn.disabled = false;
});

lapBtn.addEventListener('click', function() {
  lapTimer();
});h
